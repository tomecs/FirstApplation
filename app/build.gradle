apply plugin: 'com.android.application'

//定义时间
def releaseTime() {
    return new Date().format("yyyyMMdd", TimeZone.getTimeZone("UTC"))
}

//设置发布的显示的版本号
def getVersionName(){
    return "1.2.0"
}

android {
    compileSdkVersion 26
    defaultConfig {
        applicationId "com.example.fml.firstapplation"
        minSdkVersion 27
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            buildConfigField("boolean","API_DEBUG","true")
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            buildConfigField("boolean","API_DEBUG","false")
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

//修改打包不能成功配置
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
//配置自定义打包名称
    applicationVariants.all { variant ->

        variant.outputs.all {
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                if (variant.buildType.name.equals('release')) {
                    outputFileName  = "CeShi_${getVersionName()}_${releaseTime()}_release.apk"
                } else if (variant.buildType.name.equals('debug')) {
                    outputFileName  = "CeShi_${getVersionName()}_${releaseTime()}_debug.apk"
                }
            }
        }
    }
}

//知识介绍
//1、gradle中定义变量和函数 通过关键字 def 来定义
//例如：def versionStr = "1.0.1"
//def myFunction() { return "xxxxx" }
//
//2、gradle中时间使用
//new Date().format("yyyyMMdd", TimeZone.getTimeZone("UTC");
//        这行代码的意思是“当前时间是UTC时区，已yyyyMMdd格式化时间输出”
//
//        3、gradle中variant.mergedFlavor使用
//        variant.mergedFlavor.versionName 表示修改打包时versionName的值
//
//        4、gradle中variant.outputs使用
//        variant.outputs表示输出相关配置
//
//        下面是我的build.gradle文件
//
//        apply plugin: 'com.android.application'
//        apply plugin: 'android-apt'


tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
}
